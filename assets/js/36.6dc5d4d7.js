(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{317:function(s,a,t){"use strict";t.r(a);var e=t(14),r=Object(e.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"xss-攻击"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#xss-攻击"}},[s._v("#")]),s._v(" XSS 攻击")]),s._v(" "),a("h3",{attrs:{id:"xss-攻击分类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#xss-攻击分类"}},[s._v("#")]),s._v(" XSS 攻击分类")]),s._v(" "),a("ul",[a("li",[s._v("存储型 XSS")]),s._v(" "),a("li",[s._v("反射型 XSS")]),s._v(" "),a("li",[s._v("DOM 型 XSS")])]),s._v(" "),a("h3",{attrs:{id:"xss-预防"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#xss-预防"}},[s._v("#")]),s._v(" XSS 预防")]),s._v(" "),a("ul",[a("li",[s._v("输入过滤")]),s._v(" "),a("li",[s._v("改成纯前端渲染，把代码和数据分隔开")]),s._v(" "),a("li",[s._v("对 HTML 做充分转义")]),s._v(" "),a("li",[s._v("不要把不可信的数据作为 HTML 插到页面上")])]),s._v(" "),a("h2",{attrs:{id:"csrf-攻击"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#csrf-攻击"}},[s._v("#")]),s._v(" CSRF 攻击")]),s._v(" "),a("h3",{attrs:{id:"csrf-攻击类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#csrf-攻击类型"}},[s._v("#")]),s._v(" CSRF 攻击类型")]),s._v(" "),a("ul",[a("li",[s._v("GET 类型")]),s._v(" "),a("li",[s._v("POST 类型")]),s._v(" "),a("li",[s._v("链接类型")])]),s._v(" "),a("h3",{attrs:{id:"csrf-特点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#csrf-特点"}},[s._v("#")]),s._v(" CSRF 特点")]),s._v(" "),a("ul",[a("li",[s._v("攻击一般发起在第三方网站，被攻击的网站无法防止攻击发生。")]),s._v(" "),a("li",[s._v("攻击利用受害者在被攻击网站的登录凭证，冒充受害者提交操作，而不是直接窃取数据。")]),s._v(" "),a("li",[s._v("整个过程攻击者并不能获取到受害者的登录凭证，仅仅是“冒用”。")]),s._v(" "),a("li",[s._v("跨站请求可以用各种方式：图片 URL、超链接、CORS、Form 提交等等。部分请求方式可以直接嵌入在第三方论坛、文章中，难以进行追踪。")])]),s._v(" "),a("h3",{attrs:{id:"防护策略"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#防护策略"}},[s._v("#")]),s._v(" 防护策略")]),s._v(" "),a("ul",[a("li",[s._v("阻止不明外域的访问\n"),a("ul",[a("li",[s._v("同源检测")]),s._v(" "),a("li",[s._v("Samesite Cookie")])])]),s._v(" "),a("li",[s._v("提交时附加本域才能获取的信息\n"),a("ul",[a("li",[s._v("CSRF Token")]),s._v(" "),a("li",[s._v("双重 Cookie 验证")])])])]),s._v(" "),a("h4",{attrs:{id:"同源检测"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#同源检测"}},[s._v("#")]),s._v(" 同源检测")]),s._v(" "),a("p",[s._v("确定来源域名")]),s._v(" "),a("ul",[a("li",[s._v("Origin Header")]),s._v(" "),a("li",[s._v("Referer Header")])]),s._v(" "),a("h4",{attrs:{id:"csrf-token"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#csrf-token"}},[s._v("#")]),s._v(" CSRF Token")]),s._v(" "),a("p",[s._v("界面加载时，下发到页面上；"),a("br"),s._v("\n这种 Token 的值通常是使用 UserID、时间戳和随机数，通过加密的方法生成；"),a("br"),s._v("\n请求接口时，将生成的 token 值作为参数传递给后端，然后后端校验")]),s._v(" "),a("h4",{attrs:{id:"双重-cookie"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#双重-cookie"}},[s._v("#")]),s._v(" 双重 Cookie")]),s._v(" "),a("ol",[a("li",[s._v("请求页面时，注入到 Cookie，内容为随机数（如 csrfcookie=v8g9e4ksfhw）")]),s._v(" "),a("li",[s._v("前端请求时，从 Cookie 中取出，添加到 URL 中（如 POST https://www.a.com/comment?csrfcookie=v8g9e4ksfhw）")]),s._v(" "),a("li",[s._v("后端检验 Cookie 中的字段与 URL 参数中的字段是否一致")])]),s._v(" "),a("p",[s._v("缺点：任何跨域都会导致前端无法获取 Cookie 中的字段（包括子域名之间）")]),s._v(" "),a("h4",{attrs:{id:"samesite-cookie-属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#samesite-cookie-属性"}},[s._v("#")]),s._v(" Samesite Cookie 属性")]),s._v(" "),a("p",[s._v("响应标头"),a("code",[s._v("Set-Cookie")]),s._v(" 被用来由服务器端向用户代理发送 cookie")]),s._v(" "),a("p",[s._v("没有 samesite 属性默认是 lax 值"),a("br"),s._v(" "),a("code",[s._v("Samesite=Strict")]),s._v(" 严格模式，这个 Cookie 在任何情况下都不可能作为第三方 Cookie，绝无例外")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("Set"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("Cookie"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" foo"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" Samesite"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("Strict  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 不会被带过去")]),s._v("\nSet"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("Cookie"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" bar"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" Samesite"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("Lax  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 会被带过去")]),s._v("\nSet"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("Cookie"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" baz"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[a("code",[s._v("Samesite=Lax")]),s._v(" 宽松模式，假如这个请求是这种请求（改变了当前页面或者打开了新页面）且同时是个 GET 请求，则这个 Cookie 可以作为第三方 Cookie")]),s._v(" "),a("h2",{attrs:{id:"sql-注入"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sql-注入"}},[s._v("#")]),s._v(" SQL 注入")]),s._v(" "),a("p",[s._v("通过把 SQL 命令插入到 Web 表单、页面请求的查询字符串里面提交到服务器，最终达到欺骗服务器执行恶意的 SQL 命令")]),s._v(" "),a("h3",{attrs:{id:"原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#原理"}},[s._v("#")]),s._v(" 原理")]),s._v(" "),a("p",[s._v("服务器执行 sql 时，将前端传递的参数作为拼接 sql 的一部分，导致一些预期外的效果")]),s._v(" "),a("h3",{attrs:{id:"防范方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#防范方法"}},[s._v("#")]),s._v(" 防范方法")]),s._v(" "),a("p",[s._v("对用户输入进行校验，不要把机密信息明文存储，请加密或者 hash 掉密码和敏感信息")])])}),[],!1,null,null,null);a.default=r.exports}}]);